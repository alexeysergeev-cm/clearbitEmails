{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","nameInput","setName","link","linkInput","setLink","position","positionInput","setPosition","company","companyInput","setCompany","e","exp","setExp","text","useEffect","ia","includes","document","getElementById","innerHTML","noun","Date","slice","className","style","type","onChange","target","value","onClick","innerText","id","range","createRange","selectNode","selection","window","getSelection","removeAllRanges","addRange","execCommand","copy","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6b5d1ec4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\nfunction App() {\n  const [nameInput, setName] = useState({name: ''})\n  const [linkInput, setLink] = useState({link: ''})\n  const [positionInput, setPosition] = useState({position: ''})\n  const [companyInput, setCompany] = useState({company: ''})\n  const [exp, setExp] = useState({e: ''})\n  const [text, setText] = useState({text: ''})\n\n  useEffect(() => {\n    let ia;\n    if('aeouiAEOIU'.includes(positionInput.position[0])){\n      ia = 'an'\n    }else {\n      ia = 'a'\n    }\n    document.getElementById('indefinite-article').innerHTML = ia;\n  }, [positionInput]);\n\n  useEffect(()=>{\n    const days = {\n      'Mon': 0,\n      'Tue': 1,\n      'Wed': 2,\n      'Thu': 3,\n      'Fri': 4,\n    }\n\n    const today = Date().slice(0,3);\n    let noun;\n    if (days[today] < 3) {\n      noun = 'this'\n    } else{\n      noun = 'next'\n    }\n    document.getElementById('date').innerHTML = noun;\n  })\n  \n  const clearText = () => {\n    setName({name: ''})\n    setPosition({position: ''})\n    setLink({link: ''})\n    setCompany({company: ''})\n    setExp({e: ''})\n    document.getElementById('copied').innerText = ''\n  }\n\n  const copy =()=>{\n    const text = document.getElementById('m-text')\n    const range = document.createRange();\n    range.selectNode(text);\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n    \n    const successful = document.execCommand('copy');\n    document.getElementById('copied').innerText = 'Copied!'\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{'color': 'White', 'fontSize': '40px', 'padding': '30px', 'fontWeight': 'bold'}}>ClearBit Emails</div>\n        <div className='inputs'>\n          <div>\n            Person name <input type='text' onChange={(e) => setName({name: e.target.value})} value={nameInput.name}/>\n          </div>\n          <div>\n            Person position <input type='text' onChange={(e) => setPosition({position: e.target.value})} value={positionInput.position}/>\n          </div>\n          <div>\n            Link to job post<input type='text' onChange={(e) => setLink({link: e.target.value})} value={linkInput.link}/>\n          </div>\n          <div>\n            Company name <input type='text' onChange={(e) => setCompany({company: e.target.value})} value={companyInput.company}/>\n          </div>\n          <div>\n            Experience required <input type='text' onChange={(e) => setExp({e: e.target.value})} value={exp.e}/>\n          </div>\n        </div>\n        <div style={{'display': 'flex', 'justifyContent': 'space-between', 'width': '500px', 'margin': '20px','height': '50px',}}>\n          <button onClick={() => clearText()} style={{'background': 'pink'}}>Clear</button>\n          <div id='copied'></div>\n          <button onClick={() => copy()} style={{'background': 'lightgreen'}}>Copy to clipboard</button>\n        </div>\n        \n        <div className='main-text' style={{'width': '600px'}}>\n          <text id='m-text'>\n            Hi {nameInput.name},\n            <br />\n            <br />\n            I saw your company is hiring a <a href={linkInput.link}>Software Developer</a> and noticed you are <p id='indefinite-article'></p> {positionInput.position}\n            &nbsp;at {companyInput.company}. I decided to personally reach out to see if you are the right person to talk\n            about the role and company. I have the {exp.e} experience that your team is seeking\n            (check out my <a href=\"https://ondesk.herokuapp.com/#/\">Full Stack Project</a>).\n            Would you be free <p id='date'></p> week for a quick zoom chat or phone call?<br />\n            <br />\n            I have attached my resume and would be happy to hear back if there is interest.\n            <br />\n            I appreciate your time.<br />\n            <br />\n            Best Regards,<br />\n            Alexey Sergeev<br />\n            <br />\n            <a href=\"https://alexeysergeev-cm.github.io\">Portfolio</a><br />\n            <a href=\"https://github.com/alexeysergeev-cm\">Github</a><br />\n            <a href=\"https://www.linkedin.com/in/alexey-sergeev-cm/\">LinkedIn</a><br />\n          </text>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}